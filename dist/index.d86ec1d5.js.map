{"mappings":"AAAA,IAAIA,KAAOC,SAASC,cAAa,SAC7BC,MAAQF,SAASC,cAAa,UAC9BE,OAAM,snCAuDNC,QAAO,GAEPC,EAAI,EAEJC,KAAI,KACJC,YAAU,KACM,OAARJ,OAAOE,GACPD,SAAO,OACQ,MAARD,OAAOE,GACdD,SAAO,SAEPA,SAAWD,OAAOE,GAGtBN,KAAKS,UAAYJ,QACHF,MAARM,UAAYL,OAAOM,UAAU,EAAGJ,GACtCK,OAAOC,SAAS,EAAG,OACnBZ,KAAKY,SAAS,EAAG,OACbN,EAAIF,OAAOS,OAAS,IACpBP,GAAK,EACLC,UAGL,KAGPA","sources":["src/main.js"],"sourcesContent":["let html = document.querySelector('#html');\nlet style = document.querySelector('#style');\nlet string = `/*\n你好，我叫Zixian\n* 接下来我展示一下我的前段基础\n* 首先我要准备一个div\n**/\n#div1{\n    border: 1px solid red;\n    width: 200px;\n    height: 200px;\n}\n/* 接下来我把 div 变成八卦图\n* 首先把 div 变成一个圆\n**/\n#div1{\n    border-radius: 50%;\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\n    border: none;\n}\n/* 太极生两仪，\n* 两仪生四象\n* 四象生八卦\n* 故八卦由阴阳组成\n* 一阴一阳\n**/\n#div1{\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\n}\n/* 但这不是我们印象中的八卦呀\n* 接下来把它优化一下\n* 让它称为我们熟知的样子\n* 先加上一个外白内黑的小球\n**/\n#div1::before{\n    width: 100px;\n    height: 100px;\n    left: 0;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    background: radial-gradient(circle, rgba(0,0,0,1) 20%, rgba(255,255,255,1) 20%, rgba(255,255,255,1) 100%, rgba(0,0,0,1) 100%);\n    border-radius: 50%;\n}\n/* 再加上一个外黑内白的小球\n**/\n#div1::after{\n    width: 100px;\n    height: 100px;\n    left: 0;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 20%, rgba(0,0,0,1) 20%, rgba(0,0,0,1) 100%);\n    border-radius: 50%;\n}\n`;\nlet string2 = '';                               //缓存显示到屏幕的结果\n\nlet n = 0;\n\nlet step = () => {\n    setTimeout(() => {\n        if (string[n] === \"\\n\") {               //是回车的话就替换掉\n            string2 += \"<br>\";\n        } else if (string[n] === \" \") {          //如果不是回车就照搬\n            string2 += \"&nbsp;\";\n        } else {\n            string2 += string[n];\n        }\n        // string2 += (string[n] === \"\\n\" ? '<br>' : string[n]);\n        html.innerHTML = string2;               //把结果放到innerHTML里面\n        style.innerHTML = string.substring(0, n);\n        window.scrollTo(0, 99999);\n        html.scrollTo(0, 99999);                //75、76行都是让页面自动往下滚，懒得区分移动端还是pc端\n        if (n < string.length - 1) {            //判断结果是否到了最后一个，不是的话继续n+1重复操作\n            n += 1;\n            step();                             // 不是最后一个,就继续\n        }\n\n    }, 50);\n}\n\nstep();\n\n\n"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"version":3,"file":"index.d86ec1d5.js.map"}